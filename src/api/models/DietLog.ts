/* tslint:disable */
/* eslint-disable */
/**
 * TTXX健康
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DietLog
 */
export interface DietLog {
    /**
     * 
     * @type {number}
     * @memberof DietLog
     */
    logId?: number;
    /**
     * 
     * @type {number}
     * @memberof DietLog
     */
    accountId?: number;
    /**
     * 
     * @type {string}
     * @memberof DietLog
     */
    foodItem?: string;
    /**
     * 
     * @type {number}
     * @memberof DietLog
     */
    quantityGrams?: number;
    /**
     * 
     * @type {number}
     * @memberof DietLog
     */
    totalCalories?: number;
    /**
     * 
     * @type {Date}
     * @memberof DietLog
     */
    consumptionTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DietLog
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the DietLog interface.
 */
export function instanceOfDietLog(value: object): value is DietLog {
    return true;
}

export function DietLogFromJSON(json: any): DietLog {
    return DietLogFromJSONTyped(json, false);
}

export function DietLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): DietLog {
    if (json == null) {
        return json;
    }
    return {
        
        'logId': json['logId'] == null ? undefined : json['logId'],
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'foodItem': json['foodItem'] == null ? undefined : json['foodItem'],
        'quantityGrams': json['quantityGrams'] == null ? undefined : json['quantityGrams'],
        'totalCalories': json['totalCalories'] == null ? undefined : json['totalCalories'],
        'consumptionTime': json['consumptionTime'] == null ? undefined : (new Date(json['consumptionTime'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function DietLogToJSON(json: any): DietLog {
    return DietLogToJSONTyped(json, false);
}

export function DietLogToJSONTyped(value?: DietLog | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'logId': value['logId'],
        'accountId': value['accountId'],
        'foodItem': value['foodItem'],
        'quantityGrams': value['quantityGrams'],
        'totalCalories': value['totalCalories'],
        'consumptionTime': value['consumptionTime'] == null ? undefined : ((value['consumptionTime']).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

