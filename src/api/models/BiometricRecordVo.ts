/* tslint:disable */
/* eslint-disable */
/**
 * TTXX健康
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 生物特征记录视图对象，包含计算的BMI和各项指标评估
 * @export
 * @interface BiometricRecordVo
 */
export interface BiometricRecordVo {
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    recordId?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    accountId?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    heightCm?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    weightKg?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    systolicPressure?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    diastolicPressure?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    bloodGlucose?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecordVo
     */
    bloodLipid?: number;
    /**
     * 
     * @type {Date}
     * @memberof BiometricRecordVo
     */
    measurementTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BiometricRecordVo
     */
    createdAt?: Date;
    /**
     * BMI值
     * @type {number}
     * @memberof BiometricRecordVo
     */
    bmi?: number;
    /**
     * BMI分级
     * @type {string}
     * @memberof BiometricRecordVo
     */
    bmiLevel?: BiometricRecordVoBmiLevelEnum;
    /**
     * 血压分级
     * @type {string}
     * @memberof BiometricRecordVo
     */
    bloodPressureLevel?: BiometricRecordVoBloodPressureLevelEnum;
    /**
     * 血糖状态
     * @type {string}
     * @memberof BiometricRecordVo
     */
    bloodGlucoseLevel?: BiometricRecordVoBloodGlucoseLevelEnum;
    /**
     * 血脂状态
     * @type {string}
     * @memberof BiometricRecordVo
     */
    bloodLipidLevel?: BiometricRecordVoBloodLipidLevelEnum;
}

/**
 * @export
 */
export const BiometricRecordVoBmiLevelEnum = {
    THIN: '偏瘦',
    NORMAL: '正常',
    OVERWEIGHT: '超重',
    OBESE: '肥胖'
} as const;
export type BiometricRecordVoBmiLevelEnum = typeof BiometricRecordVoBmiLevelEnum[keyof typeof BiometricRecordVoBmiLevelEnum];

/**
 * @export
 */
export const BiometricRecordVoBloodPressureLevelEnum = {
    NORMAL: '正常',
    HIGH_NORMAL: '正常偏高',
    PRE_HYPERTENSION: '轻度高血压前期',
    GRADE_1: '1级高血压',
    GRADE_2: '2级高血压',
    GRADE_3: '3级高血压'
} as const;
export type BiometricRecordVoBloodPressureLevelEnum = typeof BiometricRecordVoBloodPressureLevelEnum[keyof typeof BiometricRecordVoBloodPressureLevelEnum];

/**
 * @export
 */
export const BiometricRecordVoBloodGlucoseLevelEnum = {
    LOW: '低血糖',
    NORMAL: '正常',
    IMPAIRED: '糖耐量受损',
    HIGH: '血糖偏高'
} as const;
export type BiometricRecordVoBloodGlucoseLevelEnum = typeof BiometricRecordVoBloodGlucoseLevelEnum[keyof typeof BiometricRecordVoBloodGlucoseLevelEnum];

/**
 * @export
 */
export const BiometricRecordVoBloodLipidLevelEnum = {
    NORMAL: '正常',
    BORDERLINE: '边缘升高',
    HIGH: '升高'
} as const;
export type BiometricRecordVoBloodLipidLevelEnum = typeof BiometricRecordVoBloodLipidLevelEnum[keyof typeof BiometricRecordVoBloodLipidLevelEnum];

/**
 * Check if a given object implements the BiometricRecordVo interface.
 */
export function instanceOfBiometricRecordVo(value: object): value is BiometricRecordVo {
    return true;
}

export function BiometricRecordVoFromJSON(json: any): BiometricRecordVo {
    return BiometricRecordVoFromJSONTyped(json, false);
}

export function BiometricRecordVoFromJSONTyped(json: any, ignoreDiscriminator: boolean): BiometricRecordVo {
    if (json == null) {
        return json;
    }
    return {

        'recordId': json['recordId'] == null ? undefined : json['recordId'],
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'heightCm': json['heightCm'] == null ? undefined : json['heightCm'],
        'weightKg': json['weightKg'] == null ? undefined : json['weightKg'],
        'systolicPressure': json['systolicPressure'] == null ? undefined : json['systolicPressure'],
        'diastolicPressure': json['diastolicPressure'] == null ? undefined : json['diastolicPressure'],
        'bloodGlucose': json['bloodGlucose'] == null ? undefined : json['bloodGlucose'],
        'bloodLipid': json['bloodLipid'] == null ? undefined : json['bloodLipid'],
        'measurementTime': json['measurementTime'] == null ? undefined : (new Date(json['measurementTime'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'bmi': json['bmi'] == null ? undefined : json['bmi'],
        'bmiLevel': json['bmiLevel'] == null ? undefined : json['bmiLevel'],
        'bloodPressureLevel': json['bloodPressureLevel'] == null ? undefined : json['bloodPressureLevel'],
        'bloodGlucoseLevel': json['bloodGlucoseLevel'] == null ? undefined : json['bloodGlucoseLevel'],
        'bloodLipidLevel': json['bloodLipidLevel'] == null ? undefined : json['bloodLipidLevel'],
    };
}

export function BiometricRecordVoToJSON(json: any): BiometricRecordVo {
    return BiometricRecordVoToJSONTyped(json, false);
}

export function BiometricRecordVoToJSONTyped(value?: BiometricRecordVo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {

        'recordId': value['recordId'],
        'accountId': value['accountId'],
        'heightCm': value['heightCm'],
        'weightKg': value['weightKg'],
        'systolicPressure': value['systolicPressure'],
        'diastolicPressure': value['diastolicPressure'],
        'bloodGlucose': value['bloodGlucose'],
        'bloodLipid': value['bloodLipid'],
        'measurementTime': value['measurementTime'] == null ? undefined : ((value['measurementTime']).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'bmi': value['bmi'],
        'bmiLevel': value['bmiLevel'],
        'bloodPressureLevel': value['bloodPressureLevel'],
        'bloodGlucoseLevel': value['bloodGlucoseLevel'],
        'bloodLipidLevel': value['bloodLipidLevel'],
    };
}
