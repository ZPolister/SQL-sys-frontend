/* tslint:disable */
/* eslint-disable */
/**
 * TTXX健康
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BiometricRecord
 */
export interface BiometricRecord {
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    recordId?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    accountId?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    heightCm?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    weightKg?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    systolicPressure?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    diastolicPressure?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    bloodGlucose?: number;
    /**
     * 
     * @type {number}
     * @memberof BiometricRecord
     */
    bloodLipid?: number;
    /**
     * 
     * @type {Date}
     * @memberof BiometricRecord
     */
    measurementTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BiometricRecord
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the BiometricRecord interface.
 */
export function instanceOfBiometricRecord(value: object): value is BiometricRecord {
    return true;
}

export function BiometricRecordFromJSON(json: any): BiometricRecord {
    return BiometricRecordFromJSONTyped(json, false);
}

export function BiometricRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): BiometricRecord {
    if (json == null) {
        return json;
    }
    return {
        
        'recordId': json['recordId'] == null ? undefined : json['recordId'],
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'heightCm': json['heightCm'] == null ? undefined : json['heightCm'],
        'weightKg': json['weightKg'] == null ? undefined : json['weightKg'],
        'systolicPressure': json['systolicPressure'] == null ? undefined : json['systolicPressure'],
        'diastolicPressure': json['diastolicPressure'] == null ? undefined : json['diastolicPressure'],
        'bloodGlucose': json['bloodGlucose'] == null ? undefined : json['bloodGlucose'],
        'bloodLipid': json['bloodLipid'] == null ? undefined : json['bloodLipid'],
        'measurementTime': json['measurementTime'] == null ? undefined : (new Date(json['measurementTime'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function BiometricRecordToJSON(json: any): BiometricRecord {
    return BiometricRecordToJSONTyped(json, false);
}

export function BiometricRecordToJSONTyped(value?: BiometricRecord | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'recordId': value['recordId'],
        'accountId': value['accountId'],
        'heightCm': value['heightCm'],
        'weightKg': value['weightKg'],
        'systolicPressure': value['systolicPressure'],
        'diastolicPressure': value['diastolicPressure'],
        'bloodGlucose': value['bloodGlucose'],
        'bloodLipid': value['bloodLipid'],
        'measurementTime': value['measurementTime'] == null ? undefined : ((value['measurementTime']).toISOString()),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

